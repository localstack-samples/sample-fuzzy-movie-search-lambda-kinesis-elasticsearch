name: Deploy on LocalStack 

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # “At 00:00 on Sunday.”
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  fuzzy-movies:
    name: Setup fuzzy movie application
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5
      - name: Setup tflocal
        run: |
          pip install terraform-local

      - name: Start LocalStack
        env:
          LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
        run: |
          pip install localstack awscli-local[ver1]
          docker pull localstack/localstack-pro:latest
          # Start LocalStack in the background
          DEBUG=1 localstack start -d
          # Wait 15 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          localstack wait -t 15
          echo "Startup complete"

      - name: Deploy the ressources
        run: |
          terraform init
          terraform plan
          terraform apply --auto-approve
      
      - name: Run the application
        run: ./run.sh

      # - name: Send a Slack notification
      #   if: failure() || github.event_name != 'pull_request'
      #   uses: ravsamhq/notify-slack-action@v2
      #   with:
      #     status: ${{ job.status }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     notification_title: "{workflow} has {status_message}"
      #     message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
      #     footer: "Linked Repo <{repo_url}|{repo}> | <{run_url}|View Workflow run>"
      #     notify_when: "failure"
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # - name: Generate a Diagnostic Report
      #   if: failure()
      #   run: |
      #     curl -s localhost:4566/_localstack/diagnose | gzip -cf > diagnose.json.gz

      # - name: Upload the Diagnostic Report
      #   if: failure()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: diagnose.json.gz
      #     path: ./diagnose.json.gz
